Search.setIndex({"docnames": ["coding-standards", "compliance", "compliance.scripts", "compliance.utils", "compliance.utils.services", "design-principles", "evidence-partitioning", "fixers", "index", "modules", "notifiers", "oscal", "quick-start", "report-builder", "running-on-tekton", "running-on-travis", "verifying-signed-evidence"], "filenames": ["coding-standards.rst", "compliance.rst", "compliance.scripts.rst", "compliance.utils.rst", "compliance.utils.services.rst", "design-principles.rst", "evidence-partitioning.rst", "fixers.rst", "index.rst", "modules.rst", "notifiers.rst", "oscal.rst", "quick-start.rst", "report-builder.rst", "running-on-tekton.rst", "running-on-travis.rst", "verifying-signed-evidence.rst"], "titles": ["Coding Standards", "compliance package", "compliance.scripts package", "compliance.utils package", "compliance.utils.services package", "Design Principles", "Partitioned Evidence", "Fixers", "Auditree framework documentation", "compliance", "Notifiers", "OSCAL Support", "Quick Start", "Report Builder", "Running on Tekton", "Running on Travis", "Verifying Signed Evidence"], "terms": {"In": [0, 5, 6, 10, 12, 13], "thi": [0, 1, 3, 4, 5, 6, 10, 12, 13, 15, 16], "project": [0, 4, 5, 10, 12, 15], "we": [0, 5, 12], "us": [0, 1, 3, 4, 5, 6, 10, 12, 13, 15], "python": [0, 1, 12, 15], "program": [0, 5], "languag": [0, 15], "so": [0, 5, 10, 13, 15], "pleas": 0, "follow": [0, 1, 5, 6, 10, 12, 13, 15, 16], "rule": [0, 5, 12], "keep": [0, 5], "tidi": 0, "black": 0, "flake8": 0, "don": [0, 12, 15], "t": [0, 1, 4, 5, 12, 15], "introduc": 0, "new": [0, 1, 5, 10, 12, 15], "violat": 0, "remov": [0, 1, 4], "them": [0, 1, 4, 5, 10, 13, 15], "you": [0, 1, 3, 5, 8, 10, 12, 13, 15], "spot": 0, "ani": [0, 1, 3, 4, 5, 12, 13, 15, 16], "i": [0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 15, 16], "enforc": 0, "github": [0, 1, 3, 5, 6, 8, 12, 15], "action": [0, 4, 5], "build": [0, 1, 5, 9], "To": [0, 5, 10, 12], "check": [0, 4, 8, 9, 12, 13, 15], "your": [0, 3, 5, 6, 10, 12, 15, 16], "local": [0, 1, 5, 10, 12, 16], "make": [0, 4, 8, 15], "format": [0, 1, 3, 5, 10, 12, 13], "lint": 0, "provid": [0, 1, 3, 4, 5, 6, 10, 12, 13], "good": [0, 5, 12], "unit": [0, 8], "chang": [0, 1, 4, 5, 15], "It": [0, 1, 5, 12, 13], "import": [0, 5, 12], "level": [0, 3, 5, 13, 15], "coverag": 0, "document": [0, 1, 6, 10, 12], "everyth": [0, 5], "creat": [0, 1, 4, 5, 10, 12, 13, 15], "docstr": [0, 1], "within": [0, 1, 3, 4, 5, 10, 12, 13], "sphinx": 0, "sure": [0, 16], "work": [0, 1, 13], "befor": [0, 1, 5], "pr": 0, "an": [0, 1, 3, 4, 5, 10, 12, 13, 15], "interest": 0, "read": [0, 1], "tool": [0, 5, 8, 12], "run": [0, 1, 2, 5, 8, 9, 10, 12, 13], "slower": 0, "ask": 0, "yourself": 0, "actual": [0, 1, 5], "": [0, 1, 3, 4, 5, 6, 12, 13], "onli": [0, 1, 4, 5, 10, 12], "wai": [0, 5, 12, 13, 15], "do": [0, 5, 10, 12, 15], "somebodi": 0, "advic": 0, "must": [0, 1, 5, 6, 10, 12], "fast": 0, "realli": [0, 15], "never": [0, 5], "network": 0, "resourc": [0, 5], "shell": 0, "command": [0, 1, 2, 5, 10, 12, 16], "o": 0, "system": [0, 1, 5, 10, 12], "subprocess": 0, "etc": [0, 5, 13], "unless": 0, "usag": [0, 5, 8], "would": [0, 5, 13, 15], "save": [0, 5, 16], "u": [0, 6], "from": [0, 1, 3, 4, 5, 10, 12, 13, 15, 16], "dai": [0, 1, 5, 6, 10], "ton": 0, "librari": [0, 3, 5], "ar": [0, 1, 4, 5, 6, 10, 12, 13, 15], "prefer": 0, "most": [0, 1, 5], "case": [0, 5, 6, 10, 12, 13], "explain": 0, "try": [0, 5], "convinc": 0, "peopl": [0, 5, 15], "why": [0, 5], "better": 0, "idea": [0, 5, 10], "while": [0, 5], "thei": [0, 1, 5, 12, 15], "can": [0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 15, 16], "benefici": 0, "mean": [0, 5, 12], "maintain": [0, 1], "compat": [0, 1], "instal": [0, 5, 12, 15], "process": [0, 1, 15], "get": [0, 1, 3, 4, 5, 8, 9, 10], "more": [0, 5, 6, 12, 13, 15], "complic": 0, "default": [0, 1, 2, 3, 4, 5, 9, 10, 12, 13], "built": [0, 1], "ins": 0, "If": [0, 1, 3, 4, 5, 6, 10, 12, 13, 16], "need": [0, 1, 5, 10, 12, 13, 15], "reason": [0, 1, 5], "1": [0, 1, 4, 5], "els": [0, 1, 15], "due": [0, 1, 5], "abov": [0, 12, 13], "extern": [0, 1, 5, 15], "much": 0, "possibl": [0, 1, 5, 6, 10, 13], "consensu": 0, "one": [0, 1, 3, 4, 5, 10, 12, 15], "assum": [0, 1, 3, 5, 13, 15], "add": [0, 1, 4, 5, 10, 12, 16], "pai": [0, 5], "attent": [0, 5], "result": [0, 1, 4, 5, 10, 12, 13, 15], "come": [0, 5, 11, 14], "back": 0, "entir": [0, 4, 6], "suit": 0, "cleanli": 0, "script": [1, 9, 15], "compliance_cli": [1, 9], "compliancecli": [1, 2], "name": [1, 2, 4, 5, 9, 10, 12, 13], "util": [1, 9], "servic": [1, 3, 5, 6, 10, 12], "pagerduti": [1, 3, 5, 12], "credenti": [1, 4, 8, 9, 10, 12], "data_pars": [1, 9], "deep_merg": [1, 3], "format_json": [1, 3], "get_sha256_hash": [1, 3], "parse_dot_kei": [1, 3], "except": [1, 5, 9], "dependencyfetchernotfounderror": [1, 3], "dependencyunavailableerror": [1, 3], "evidencenotfounderror": [1, 3], "historicalevidencenotfounderror": [1, 3], "lockerpusherror": [1, 3], "staleevidenceerror": [1, 3], "unverifiedevidenceerror": [1, 3], "http": [1, 4, 5, 6, 9, 10, 12, 15], "basesess": [1, 3], "prepare_request": [1, 3], "path": [1, 4, 5, 6, 9, 10, 12, 13], "get_module_path": [1, 3], "get_toplevel_dirpath": [1, 3], "load_evidences_modul": [1, 3], "substitute_config": [1, 3], "test": [1, 5, 8, 9, 10, 12, 13], "parse_test_id": [1, 3], "autom": [1, 2, 3, 4, 8], "class": [1, 2, 3, 4, 5, 6, 10, 12], "complianceag": [1, 9], "none": [1, 2, 3, 4, 5, 10], "use_agent_dir": [1, 12], "true": [1, 3, 4, 5], "sourc": [1, 2, 3, 4, 5], "base": [1, 2, 3, 4, 5, 6, 10], "object": [1, 3, 4, 5, 6, 13], "agents_dir": [1, 9], "public_keys_evidence_path": [1, 9], "raw": [1, 5, 6, 12, 16], "auditre": [1, 5, 12, 13, 15, 16], "agent_public_kei": [1, 12, 16], "json": [1, 3, 4, 5, 6, 15, 16], "classmethod": 1, "from_config": [1, 9], "load": [1, 3, 5, 9, 10, 12], "configur": [1, 3, 5, 10, 15], "get_path": [1, 9], "full": [1, 3, 5, 10, 12, 15], "paramet": [1, 3, 4, 5, 6, 10, 15], "The": [1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 15], "rel": [1, 3, 6], "string": [1, 3, 4, 5, 10, 13], "return": [1, 3, 4, 5, 10, 13], "hash_and_sign": [1, 9], "data_byt": 1, "hash": [1, 3], "sign": [1, 8, 12], "privat": [1, 5, 10, 12, 15], "kei": [1, 3, 4, 5, 6, 10, 12, 16], "data": [1, 3, 4, 5], "byte": [1, 5], "A": [1, 3, 5, 6, 10, 12, 15], "tupl": [1, 5], "contain": [1, 3, 5, 10, 12, 13], "hexadecim": 1, "digest": [1, 12, 16], "base64": [1, 16], "encod": 1, "signatur": [1, 12, 16], "load_public_key_from_lock": [1, 9], "public": [1, 10, 12, 16], "type": [1, 3, 5, 6, 10, 13], "properti": [1, 5, 10, 13], "private_kei": [1, 9], "public_kei": [1, 9], "signabl": [1, 9], "determin": [1, 10], "verifi": [1, 8, 9, 12], "signature_b64": 1, "fals": [1, 3, 4, 12], "compliancecheck": [1, 5, 9, 10, 13], "arg": 1, "kwarg": [1, 4], "testcas": 1, "add_evidence_metadata": [1, 9], "evidence_path": [1, 5], "evidence_dt": 1, "evidence_lock": 1, "metadata": [1, 4, 12], "evidence_metadata": [1, 9], "each": [1, 5, 10, 12, 13], "date": [1, 4, 5, 12, 13], "wa": [1, 5], "retriev": [1, 3, 4, 5], "when": [1, 5, 10, 12, 13, 16], "histor": [1, 3, 5], "found": [1, 3, 5, 12, 13], "secondari": 1, "add_failur": [1, 5, 9], "section_kei": 1, "section_valu": 1, "failur": [1, 5, 9, 10, 13, 15, 16], "param": [1, 4], "all": [1, 3, 4, 5, 10, 12, 13], "add_issue_if_diff": [1, 9], "expect": [1, 5, 13], "msg": 1, "as_warn": 1, "warn": [1, 5, 9, 10, 13], "differ": [1, 3, 5, 15], "exist": [1, 4, 6, 10, 12], "between": [1, 12], "set": [1, 5, 6, 10, 12], "item": [1, 5], "section": [1, 3, 5, 8, 10, 12, 13, 15], "fail": [1, 5, 10], "add_success": [1, 5, 9], "success": [1, 5, 9, 16], "add_warn": [1, 5, 9], "evidences_for_check": [1, 9], "failures_count": [1, 9], "count": 1, "specif": [1, 3, 5, 10, 12, 15], "failures_for_check": [1, 9], "associ": [1, 3, 12], "failures_for_check_count": [1, 9], "fixed_failure_count": [1, 5, 9], "routin": 1, "get_historical_evid": [1, 9], "track": [1, 5, 15], "id": [1, 3, 4, 5, 9, 10], "reset": 1, "ha": [1, 5, 6, 10, 12, 15], "been": [1, 5, 12, 13, 15], "transplant": 1, "list": [1, 3, 4, 5, 6, 10, 12, 13], "overrid": [1, 6, 10], "unittest": [1, 5], "method": [1, 3, 4, 5, 10, 13], "decor": [1, 5], "test_": [1, 5, 10], "ad": [1, 4, 5, 10, 12], "common": 1, "function": [1, 3, 5, 10], "e": [1, 4, 5, 10, 12, 13], "g": [1, 4, 5, 10, 12, 13], "runbook_url": [1, 9], "runbook": [1, 10], "url": [1, 3, 4, 10, 12], "link": [1, 4, 10], "enabl": 1, "valu": [1, 3, 4, 5, 10], "html": 1, "successes_count": [1, 9], "successes_for_check": [1, 9], "successes_for_check_count": [1, 9], "titl": [1, 4, 9, 10], "normal": [1, 10], "total_issues_count": [1, 9], "total": 1, "number": [1, 4, 5, 10, 12], "issu": [1, 4, 5, 12, 15], "warnings_count": [1, 9], "warnings_for_check": [1, 9], "warnings_for_check_count": [1, 9], "complianceconfig": [1, 9], "cach": 1, "known": [1, 5], "includ": [1, 3, 4, 5, 6, 10, 12], "dirnam": 1, "repo_url": [1, 5, 6, 12, 15], "com": [1, 3, 4, 5, 6, 8, 12, 15], "your_org": 1, "your_project": 1, "gh_issu": [1, 10], "ghe_issu": 1, "slack": [1, 5, 12, 15], "org": [1, 4, 5, 6, 10, 15], "base_url": [1, 4], "exampl": [1, 3, 5, 10, 12, 13, 15], "add_evid": [1, 5, 9], "evidence_list": 1, "cred": [1, 4, 9, 12], "manag": [1, 5, 6, 10], "fetcher": [1, 3, 6, 12, 13, 15], "current": [1, 5, 10, 12, 15], "config_path": 1, "suppli": [1, 3, 5], "cannot": [1, 3, 5, 12], "dot": [1, 3, 5, 6], "notat": [1, 3, 5, 6], "subkei": 1, "For": [1, 3, 4, 5, 6, 10, 12, 13, 15], "instanc": [1, 3, 5], "get_evid": [1, 9], "source1": 1, "get_template_dir": [1, 9], "test_obj": 1, "absolut": [1, 3], "templat": [1, 3, 12], "directori": [1, 3, 5, 12, 13], "first": [1, 12, 13], "travers": 1, "revers": 1, "initi": 1, "compliancetest": 1, "where": [1, 4, 5, 6, 10, 12], "search": [1, 4, 13], "start": [1, 4, 8], "config_fil": 1, "file": [1, 3, 6, 12, 15], "raw_config": [1, 9], "dictionari": [1, 3, 4, 5, 10, 13], "get_config": [1, 5, 9], "global": 1, "controldescriptor": [1, 9], "dir": 1, "abstract": 1, "accred_check": [1, 9], "accredit": [1, 3, 5, 12, 15], "as_dict": [1, 9], "descriptor": 1, "modifi": [1, 3, 5], "get_accredit": [1, 9], "test_path": 1, "given": [1, 3, 4, 5, 6, 10, 12], "origin": [1, 5, 6], "simplifi": 1, "sub": [1, 3, 5, 6, 10, 12], "accred1": [1, 10], "accred2": 1, "categori": [1, 10], "testclass": 1, "is_test_includ": [1, 9], "boolean": 1, "whether": [1, 15], "part": [1, 3, 5, 6, 10, 12, 15], "accr1": [1, 10], "accr2": [1, 10], "test_funct": 1, "mai": [1, 3, 5, 6, 10], "derivedevid": [1, 5, 9], "ttl": [1, 5, 12], "86400": 1, "descript": [1, 5, 10], "_baseevid": 1, "deriv": [1, 5], "evidence_typ": [1, 9], "externalevid": [1, 5, 9], "31536000": 1, "lazyload": [1, 5, 9], "ev_class": [1, 5, 9], "alia": [1, 5], "field": [1, 5, 6, 10], "0": [1, 4], "rawevid": [1, 5, 6, 9], "partit": [1, 5, 8], "abl": [1, 5], "along": [1, 5, 10, 12], "option": [1, 3, 5, 6, 10, 12, 15], "root": [1, 12], "defin": [1, 3, 5, 10, 15], "directli": [1, 4, 6, 10, 16], "upon": [1, 5, 10], "construct": [1, 5, 6], "constructor": 1, "rout": 1, "both": [1, 5], "get_partit": [1, 9], "slice": 1, "match": [1, 13], "dure": [1, 5, 13], "instanti": 1, "filter": 1, "is_partit": [1, 9], "statu": [1, 10], "partition_kei": [1, 9], "well": [1, 10], "reportevid": [1, 5, 9, 13], "tmpevid": [1, 5, 9], "temporari": 1, "tmp": [1, 5], "derived_evid": [1, 5, 9], "target": [1, 5, 10], "helper": [1, 3, 4, 5], "context": [1, 5], "typic": [1, 5, 10, 12, 13, 15], "fetch_": [1, 5], "implement": [1, 5, 10, 12, 13], "dynam": [1, 5], "static": 1, "store_derived_evid": [1, 5, 9], "instead": [1, 5, 12], "expir": [1, 5, 12], "yield": [1, 5, 6], "specifi": [1, 3, 5, 10, 12], "argument": [1, 4, 5, 10, 15], "call": [1, 4, 12, 13, 15], "block": [1, 4], "exit": [1, 5, 15], "gracefulli": 1, "immedi": 1, "insid": 1, "access": [1, 5, 10, 12], "through": [1, 5, 15], "short": [1, 5, 10], "singl": [1, 5, 6], "alwai": [1, 5, 12, 15], "gener": [1, 3, 4, 5, 10, 12, 13, 15], "via": [1, 5, 8], "set_cont": [1, 5], "obj": 1, "from_evid": 1, "with_": 1, "_evid": [1, 6], "get_evidence_base_class": [1, 9], "valid": [1, 9, 10, 12], "get_evidence_by_path": [1, 9], "strategi": [1, 5, 10], "present": [1, 10], "popul": [1, 5, 13], "necessari": [1, 5, 6, 10], "otherwis": [1, 3, 5, 10, 16], "get_evidence_class": [1, 9], "appropri": [1, 3, 5, 6, 10, 12], "correspond": [1, 5, 12], "desir": [1, 5, 10, 12], "get_evidence_depend": [1, 5, 9], "depend": [1, 3, 6, 10, 15], "other": [1, 5, 6, 10, 12, 13], "anoth": [1, 4, 5, 15], "order": [1, 4, 5, 6, 10, 12, 13], "complet": [1, 5], "its": [1, 5, 12], "premis": 1, "becaus": [1, 5, 13], "place": 1, "without": [1, 4], "put": [1, 3, 4, 10, 12], "queu": 1, "up": [1, 12], "rerun": 1, "subsequ": 1, "re": [1, 5, 12], "execut": [1, 2, 8, 10, 12, 13, 15], "stack": 1, "find": [1, 5, 12, 13], "caller": 1, "get_evidence_typ": [1, 9], "raw_evid": [1, 5, 9], "_evidencecontextmanag": 1, "store_raw_evid": [1, 5, 9], "fetcher_": 1, "store": [1, 5, 10, 12, 13, 15], "also": [1, 4, 5, 6, 8, 10, 12, 13, 15], "handl": [1, 3, 4, 6], "pass": [1, 4, 5, 10, 13], "src": 1, "foo": [1, 3, 5, 6, 10, 12], "bar": [1, 3, 5, 6, 10, 12], "store_tmp_evid": [1, 5, 9], "tmp_evid": [1, 5, 9], "with_derived_evid": [1, 5, 9], "namedtupl": 1, "requir": [1, 5, 10, 12, 13, 15], "with_external_evid": [1, 5, 9], "with_raw_evid": [1, 5, 9], "with_tmp_evid": [1, 5, 9], "compliancefetch": [1, 5, 9], "fetchcloudantdoc": [1, 9], "db_url": 1, "cloudant": 1, "conveni": [1, 5], "doc": 1, "request": [1, 3, 4, 5], "fetchlocalcommand": [1, 9], "cwd": 1, "env": [1, 10], "show_exit_statu": 1, "show_timestamp": 1, "timeout": 1, "20": 1, "user": [1, 4, 5, 10, 13], "output": [1, 10, 12, 13], "environ": [1, 5, 12, 15], "variabl": [1, 4, 5, 13, 15], "show": [1, 5, 10], "timestamp": 1, "denot": 1, "termin": [1, 12], "after": [1, 5, 13], "second": [1, 5], "fetchurl": [1, 9], "remot": [1, 5, 10, 15], "password": [1, 5], "session": [1, 3, 9], "header": [1, 4], "trigger": [1, 10], "wherea": 1, "authent": 1, "teardownclass": [1, 9], "perform": [1, 4, 5, 12], "clean": [1, 12, 15], "write": [1, 5, 10], "tmpdir": [1, 12], "fixer": [1, 8, 9, 10], "dry_run": 1, "out": [1, 2, 3, 5, 16], "_io": 1, "textiowrapp": 1, "stdout": [1, 5, 10, 12, 15], "mode": [1, 5, 10, 12], "w": [1, 10], "utf": 1, "8": 1, "attempt": [1, 5, 13], "resolv": [1, 15], "execute_fix": [1, 9], "fct": 1, "fix_": 1, "either": [1, 5, 10, 12], "dry": [1, 5], "print": [1, 5, 16], "inject": [1, 5], "increment": [1, 5], "subclass": [1, 3], "which": [1, 3, 5, 10, 12, 15], "callback": 1, "refer": [1, 5, 13], "have": [1, 5, 10, 12, 13, 15], "what": [1, 5, 15], "displai": [1, 5], "iter": [1, 3, 13], "look": [1, 4, 5, 12, 13, 15], "These": [1, 5], "record": [1, 9], "made": [1, 4, 12, 15], "note": [1, 3, 4, 5, 6, 10, 12, 13, 15], "individu": [1, 6, 12], "fix_failur": [1, 9], "branch": [1, 4], "do_push": 1, "ttl_toler": [1, 5], "gitconfig": [1, 5], "local_path": 1, "use_extra_lock": 1, "git": [1, 5, 8, 10, 12, 15], "repositori": [1, 4, 5, 6, 10, 12, 15], "piec": 1, "against": [1, 4, 5, 12], "time": [1, 4, 5, 12, 13], "live": [1, 5, 12, 13], "On": 1, "add_content_to_lock": [1, 9], "folder": [1, 12], "filenam": 1, "non": 1, "text": [1, 5], "evidence_us": 1, "intern": 1, "attribut": [1, 5], "applic": [1, 5, 10], "checkin": [1, 9], "messag": [1, 4, 5, 10, 12, 16], "commit": [1, 4, 5, 12], "appli": [1, 5, 6, 10], "checkout": [1, 9], "pull": [1, 4, 5, 12], "clone": [1, 8, 12, 15], "clone_depth": [1, 9], "depth": [1, 12], "clone_shallow_since_dai": [1, 9], "maximum": [1, 5], "ag": 1, "shallow": [1, 12], "sinc": [1, 4, 5, 15], "create_tombstone_metadata": [1, 9], "candid": 1, "tombston": 1, "being": [1, 6], "delete_repo_loc": [1, 9], "get_abandoned_evid": [1, 9], "threshold": [1, 5], "updat": [1, 4, 5, 10, 12], "int": 1, "remain": [1, 4, 10], "un": 1, "consid": [1, 5, 12, 15], "abandon": 1, "30": 1, "get_content_from_lock": [1, 9], "get_dependency_rerun": [1, 9], "error": [1, 4, 5, 10, 13], "get_empty_evid": [1, 9], "empti": [1, 4, 5], "is_empti": [1, 5], "inform": [1, 4, 5, 8, 10, 12, 13, 15], "ignore_ttl": 1, "previou": [1, 5], "version": [1, 5], "service1": 1, "ignor": 1, "datetim": [1, 4, 13], "translat": 1, "now": [1, 5, 12, 13], "get_evidence_metadata": [1, 9], "index": [1, 9, 12], "upper": 1, "bound": 1, "get_fil": [1, 9], "get_hash": [1, 9], "master": [1, 4, 15], "revis": 1, "sha": 1, "get_index_fil": [1, 9], "get_index_file_by_path": [1, 9], "get_large_fil": [1, 9], "size": [1, 3, 5, 6], "50000000": [1, 5], "larg": [1, 5, 12], "whose": [1, 3], "get_latest_commit": [1, 9], "dt": 1, "recent": [1, 5], "latest": 1, "get_locker_repo": [1, 9], "log": [1, 5], "get_remote_loc": [1, 9], "include_commit": 1, "locker_url": 1, "should": [1, 5, 10, 12, 13, 15], "self": [1, 3, 5, 10], "get_reports_metadata": [1, 9], "relat": 1, "head_commit_hexsha": [1, 9], "head": [1, 12], "40": 1, "binari": [1, 5, 16], "init": [1, 9], "fresh": [1, 5], "init_config": [1, 9], "load_cont": [1, 9], "lock": [1, 9], "unlock": 1, "_thread": 1, "logger_init_msg": [1, 9], "push": [1, 3, 5, 9, 10, 12, 15], "remove_partit": [1, 9], "switch": 1, "unpartit": [1, 6], "longer": [1, 5], "overal": 1, "reset_depenency_rerun": [1, 9], "dependency_rerun": 1, "touched_fil": [1, 9], "touch": 1, "write_pkg_index": [1, 9], "is_evidence_fil": [1, 9], "git_obj": 1, "confirm": 1, "gitpython": 1, "isn": [1, 5], "is_index_fil": [1, 9], "point": [1, 12], "notif": [1, 5, 10, 15], "fdnotifi": [1, 9], "fd": 1, "push_error": 1, "_basenotifi": [1, 5], "written": [1, 5, 10], "ghissuesnotifi": [1, 9], "_basemdnotifi": 1, "sent": [1, 10, 12], "send": [1, 4, 5, 10, 12, 15], "lockernotifi": [1, 9], "checkmod": [1, 9], "end": [1, 5, 12, 16], "belong": 1, "pagerdutynotifi": [1, 9], "alert": [1, 10, 12], "slacknotifi": [1, 9], "channel": [1, 5, 10, 12], "message_color": [1, 9], "9932cc": 1, "d00000": 1, "00d000": 1, "ffd300": 1, "get_notifi": [1, 9], "choic": 1, "cli": [1, 2, 5], "accordingli": 1, "reportbuild": [1, 5, 9, 13], "generate_check_result": [1, 9], "rpt_metadata": 1, "combin": [1, 4, 5], "detail": [1, 4, 5, 10, 12], "about": [1, 8, 12], "generate_toc": [1, 9], "tabl": [1, 12], "toc": 1, "append": [1, 3, 13], "bottom": 1, "readm": [1, 12], "md": [1, 10, 13], "get_template_for": [1, 9], "test_report_obj": 1, "render_evidence_with_templ": [1, 9], "render": [1, 5, 13], "select": [1, 10], "flow": 1, "opt": 1, "extra_opt": 1, "_baserunn": 1, "build_report": [1, 9], "get_check": [1, 9], "framework": [1, 2, 3, 5, 10, 12, 13, 15], "run_check": [1, 9], "encount": 1, "run_notifi": [1, 9], "compliancebaseresult": [1, 9], "stream": 1, "verbos": 1, "texttestresult": 1, "starttest": [1, 9], "timer": 1, "stoptest": [1, 9], "compliancecheckresult": [1, 9], "adderror": [1, 9], "err": [1, 2], "form": [1, 4, 5, 10, 12], "sy": 1, "exc_info": 1, "addfailur": [1, 9], "addsuccess": [1, 9], "downstream": 1, "compliancetestwrapp": [1, 9], "wrapper": 1, "wrap": [1, 4], "ensur": [1, 3, 5, 12], "backward": 1, "fetchmod": [1, 9], "get_fetch": [1, 9], "run_fetch": [1, 9], "than": [1, 3, 5], "unavail": [1, 5], "line": [2, 5, 10], "interfac": 2, "parser": 2, "parent": [2, 5], "add_card": [3, 4], "add_issu": [3, 4], "add_issue_com": [3, 4], "add_mileston": [3, 4], "apply_label": [3, 4], "create_column": [3, 4], "create_label": [3, 4], "create_project": [3, 4], "creates_for_project": [3, 4], "extract_owner_repo": [3, 4], "extract_owner_repo_issu": [3, 4], "extract_path_chunk": [3, 4], "get_all_card": [3, 4], "get_all_issu": [3, 4], "get_all_project": [3, 4], "get_branch_protection_detail": [3, 4], "get_card": [3, 4], "get_column": [3, 4], "get_commit_detail": [3, 4], "get_issu": [3, 4], "get_issue_com": [3, 4], "get_issues_pag": [3, 4], "get_project": [3, 4], "get_pull_request": [3, 4], "get_repo_detail": [3, 4], "list_mileston": [3, 4], "make_request": [3, 4], "move_card": [3, 4], "paginate_api": [3, 4], "patch_issu": [3, 4], "rand_color": [3, 4], "remove_label": [3, 4], "search_issu": [3, 4], "update_annot": [3, 4], "extract_annot": [3, 4], "delet": [3, 4, 12], "post": [3, 4, 10, 12], "send_ev": [3, 4], "config": [3, 4, 8, 9], "cfg_file": 3, "account": [3, 5], "fetch": [3, 5, 9, 12, 15, 16], "prefix": [3, 5], "separ": [3, 6, 12], "_": [3, 5], "rais": 3, "parm": 3, "want": [3, 5, 10, 12], "whole": 3, "b": 3, "merg": [3, 4], "two": [1, 3, 5, 10, 12, 15], "dict": 3, "take": [3, 4, 5, 10, 12], "stackoverflow": 3, "7205107": 3, "566346": 3, "addl_kwarg": 3, "standard": [3, 8, 10, 13, 15], "sort": [3, 4, 5], "indent": 3, "structur": [3, 6, 10, 13, 15], "add_kwarg": 3, "addit": [3, 4, 5, 10, 12, 16], "dump": [3, 5], "sha256": [3, 16], "greater": 3, "element": [3, 10, 13], "depict": 3, "custom": [3, 12], "valueerror": 3, "miss": [3, 5], "evid": [3, 8, 9, 13, 15], "push_info": 3, "locker": [3, 6, 9, 13, 15, 16], "stale": [3, 5], "unverifi": 3, "baseurl": 3, "support": [3, 5, 8, 10], "doe": [3, 5, 10, 12, 15], "top": 3, "control": [3, 5, 8, 9], "path_tmpl": 3, "substitut": 3, "underli": 3, "test_id": [3, 10], "pars": [3, 4, 15], "baz": [3, 5, 10, 12], "test_mod": 3, "mytestclass": 3, "test_method": 3, "scope": 3, "class_path": 3, "might": [3, 5], "suggest": 3, "column_id": 4, "card": 4, "column": [4, 10], "owner": [4, 10], "repo": [4, 5, 6, 10, 15], "bodi": [4, 10], "annot": 4, "comment": [4, 10], "mileston": 4, "label": [4, 10], "like": [4, 5, 6, 10, 12, 15], "my": [4, 5, 6, 10, 12, 15, 16], "gh": 4, "api": [4, 15], "project_id": 4, "properli": [4, 5], "repo_path": 4, "protect": 4, "organ": [4, 10, 12], "parse_annot": 4, "aren": [4, 5], "page": 4, "pair": [4, 5], "accept": [4, 5], "state": [4, 5, 12], "open": [4, 10], "due_on": 4, "direct": [4, 10], "asc": 4, "rest": 4, "respons": [4, 5], "to_column_id": 4, "move": 4, "api_url": 4, "pagin": 4, "edit": 4, "random": 4, "color": 4, "queri": 4, "restrict": 4, "done": [4, 15], "themselv": 4, "oper": [1, 4, 5, 15], "pd": 4, "v2": 4, "endpoint": 4, "sever": [4, 5, 10], "event": [4, 5], "divid": 5, "main": [5, 12], "collect": [5, 16], "phase": [5, 10, 12], "noth": 5, "third": 5, "parti": 5, "gather": 5, "howev": [5, 12, 15], "permiss": 5, "veri": 5, "automat": [5, 12, 13, 15], "five": 5, "see": [5, 8, 12, 13], "input": 5, "content": [5, 6, 9, 10, 12, 13, 16], "binary_cont": 5, "keyword": 5, "those": [5, 10], "comput": 5, "over": [5, 13], "sens": 5, "same": [5, 10, 12, 13, 15], "similar": [5, 12], "plant": 5, "convent": 5, "respect": 5, "settabl": 5, "how": [5, 8, 12, 13, 15], "long": [5, 12], "daili": 5, "basi": 5, "monitor": [5, 10], "overridden": 5, "By": [5, 12], "whitespac": [5, 16], "secur": [5, 15], "locat": [5, 6, 13], "email": 5, "activ": [5, 8, 10, 12], "gpg": 5, "sige": 5, "recommend": [5, 10, 13, 15], "As": [5, 12, 13, 15], "gpgsign": 5, "gpg2": 5, "signingkei": 5, "aabbccdd": 5, "robot": [5, 15], "care": 5, "special": [5, 12], "core": 5, "toler": 5, "tell": 5, "nearli": 5, "yet": 5, "3600": 5, "affect": 5, "interact": [5, 10], "regularli": 5, "archiv": 5, "favor": 5, "yearli": 5, "refresh": 5, "guidelin": [5, 12], "caus": 5, "undesir": 5, "term": 5, "referenc": 5, "prev_repo_url": 5, "With": 5, "unabl": 5, "download": 5, "old": 5, "onc": [5, 12], "prime": 5, "enough": 5, "grow": 5, "ci": [5, 12, 15], "cd": [5, 8, 12], "job": [5, 15], "sound": 5, "shallow_dai": 5, "10": [5, 12], "minu": 5, "host": [5, 6, 12], "gitlab": [5, 12], "bitbucket": [5, 12], "limit": [5, 6, 10], "vari": 5, "exceed": 5, "turn": [5, 6], "reject": 5, "unfortun": 5, "notic": 5, "often": 5, "clear": 5, "prior": 5, "large_file_threshold": 5, "50": 5, "mb": 5, "hopefulli": 5, "some": [5, 10, 15], "child": 5, "could": 5, "code": [5, 13, 15], "engin": 5, "whatev": 5, "straight": 5, "thu": [5, 15], "aim": 5, "avoid": 5, "few": 5, "allow": [5, 10, 12], "blob": 5, "equival": 5, "milli": 5, "thumb": 5, "answer": 5, "ye": 5, "modif": 5, "fine": 5, "approv": 5, "agre": 5, "review": 5, "forbidden": 5, "logic": [5, 6], "ve": [5, 12], "help": 5, "know": [5, 10, 15], "evidence_bar": [5, 6], "fetch_foo_bar_evid": 5, "wherev": 5, "foo_bar_data": 5, "_get_from_wherev": 5, "multipl": [5, 6, 10, 12], "word": 5, "evidence_bar_": 5, "approach": 5, "produc": 5, "parameter": 5, "evidence_baz": 5, "derived_bar_baz": 5, "fetch_foo_bar_baz_derived_evid": 5, "bar_evid": 5, "baz_evid": 5, "derived_data": 5, "_do_whatev": 5, "simpli": 5, "were": 5, "derived_bar_baz_": 5, "fetch_foo_bar_derived_evid": 5, "derived_bar_": 5, "difer": 5, "cloud": 5, "exactli": 5, "across": 5, "One": 5, "previous": 5, "describ": [5, 10], "own": [5, 12], "caveat": 5, "although": 5, "great": 5, "seen": 5, "happen": [5, 12], "someth": 5, "goe": 5, "wrong": 5, "runtim": 5, "rememb": [5, 12], "def": [5, 10, 13], "_get_domain": 5, "domain": 5, "expand": 5, "f": 5, "_user": 5, "per": 5, "obtain": [5, 10], "sometim": 5, "hardwar": 5, "softwar": 5, "inventori": 5, "certain": 5, "guarante": 5, "_get_from_wherever_using_baz": 5, "bulk": 5, "exclud": 5, "repres": [5, 6], "fetcher_pkg": 5, "path_to_my_check": 5, "fetch_module_foo": 5, "foofetcherclass": 5, "fetch_module_bar": 5, "barfetcherclass": 5, "consequ": 5, "ok": [5, 16], "ran": 5, "successfulli": 5, "futur": 5, "did": 5, "stop": 5, "abruptli": 5, "deal": 5, "cast": 5, "lazy_load": 5, "barevid": 5, "my_pkg": 5, "test_bar_vs_baz": 5, "v": [5, 12], "act": 5, "test_bar_stuff": 5, "stuff": 5, "lazy_evid": 5, "group": [5, 10], "especi": 5, "altern": 5, "togeth": 5, "map": [5, 12], "chk_pkg": [5, 10, 12], "chk_cat_foo": [5, 10, 12], "chk_module_foo": [5, 10, 12], "foocheckclass": [5, 10, 12], "accr": [5, 10, 12], "chk_cat_bar": [5, 12], "chk_module_bar": [5, 10, 12], "barcheckclass": [5, 10, 12], "fix": [5, 9, 10, 15], "off": 5, "travi": [5, 8], "But": 5, "indic": 5, "real": 5, "succe": 5, "counter": 5, "inspect": 5, "regard": 5, "mechan": 5, "pc": 5, "server": 5, "jenkin": 5, "tweak": 5, "2": [5, 15], "bit": [5, 15], "compon": [5, 10], "c": [5, 10, 12, 15], "There": [5, 12], "conf": 5, "token": [5, 10, 12], "xxx": [5, 10, 12], "webhook": [5, 10, 12], "api_kei": 5, "events_integration_kei": [5, 10], "suppos": 5, "just": [5, 10, 13, 15], "export": [5, 15], "github_token": 5, "my_service_api_kei": 5, "yyi": 5, "my_servic": 5, "var": [5, 10], "grab": 5, "secret": 5, "here": 5, "op": [5, 12], "schema": 5, "vault": 5, "my_service_org": 5, "share": 5, "effect": 6, "smaller": 6, "chunk": 6, "satisfi": 6, "condit": 6, "extens": 6, "serv": 6, "nest": 6, "accomplish": 6, "san": 6, "countri": 6, "region": 6, "il": 6, "ny": 6, "uk": 6, "essex": 6, "us_il_hash": 6, "_evidence_bar": 6, "us_ny_hash": 6, "uk_essex_hash": 6, "good_stuff": 6, "nested_other_stuff": 6, "meh": 6, "other_stuff": 6, "tbd": 7, "complianc": [8, 10, 12, 15], "upload": 8, "pypi": 8, "pip": [8, 12, 15], "quick": 8, "brief": 8, "introduct": 8, "complianceascod": 8, "python3": 8, "m": [8, 10, 12], "venv": [8, 12], "bin": [8, 12, 15], "design": [8, 12], "principl": [8, 12], "report": [8, 9, 10, 12], "builder": 8, "notifi": [8, 9, 12, 13, 15], "oscal": 8, "tekton": 8, "packag": [8, 9, 10, 12], "subpackag": 9, "submodul": 9, "modul": 9, "agent": [9, 16], "runner": 9, "last": 10, "behind": 10, "awar": 10, "sensit": 10, "less": 10, "trust": 10, "tracker": 10, "mind": [10, 15], "natur": 10, "forum": 10, "intend": 10, "mandatori": 10, "subtitl": 10, "distinguish": 10, "get_notification_messag": 10, "mani": [10, 12, 13, 15], "msg_": 10, "test_ssh_us": 10, "msg_ssh_user": 10, "remedi": 10, "instruct": [10, 12, 16], "among": 10, "thing": [10, 12, 13], "purpos": 10, "person": [10, 12], "rotat": 10, "week": 10, "alert_channel_alpha": 10, "alert_channel_beta": 10, "alert_channel_gamma": 10, "moe": 10, "larri": 10, "curli": 10, "compact": 10, "offer": 10, "below": [10, 16], "shemp": 10, "app": [10, 12], "slack_webhook": 10, "slack_token": 10, "11223344": 10, "quickli": 10, "Of": 10, "cours": 10, "pageduti": 10, "service_id": 10, "test_module_on": 10, "checkclasson": 10, "test_module_two": 10, "checkclasstwo": 10, "pabc123": 10, "incid": 10, "go": 10, "dashboard": 10, "7": [10, 15], "charact": 10, "alreadi": [10, 12], "minimum": 10, "correctli": 10, "shown": 10, "usernam": 10, "status": [10, 13], "consist": [10, 12], "assign": 10, "summary_issu": 10, "frequenc": 10, "prepend": 10, "yyyi": 10, "mm": 10, "dd": 10, "year": 10, "iso": 10, "month": 10, "tag": 10, "overview": 10, "creation": 10, "assigne": 10, "super": 10, "cool": 10, "triag": 10, "dude": 10, "walter": 10, "donni": 10, "board": 10, "final": [10, 12], "backlog": 10, "markdown": 10, "alerts_summari": 10, "No": 10, "soon": [11, 14], "terminologi": 12, "guid": [12, 15], "unclear": 12, "clarif": 12, "least": 12, "let": 12, "demo": [12, 15], "proper": 12, "virtual": 12, "r": [12, 15], "txt": [12, 15, 16], "auditree_demo": 12, "demo_exampl": 12, "arboretum": 12, "check_result": [12, 15], "anyth": 12, "our": 12, "chosen": 12, "cryptograph": 12, "manual": [12, 16], "agent_nam": 12, "agent_private_kei": 12, "pem": 12, "uniqu": 12, "under": [12, 16], "uptim": 12, "suppress": 12, "behavior": 12, "avail": [12, 13, 15, 16], "begin": [12, 16], "n": [12, 16], "kept": 12, "too": [12, 13], "achiev": 12, "down": 12, "ll": 12, "github_enterpris": 12, "handi": 12, "likewis": 12, "extra": 12, "lot": 12, "central": 12, "primari": 12, "everi": 12, "histori": 12, "truncat": 12, "consol": 12, "showcas": 12, "technic": 12, "debug": 12, "safest": 12, "mitig": 12, "unintend": 12, "doesn": 12, "hurt": 12, "mirror": 12, "offici": [12, 15], "tree": 13, "get_report": 13, "category1": 13, "evidence1": 13, "jinja2": 13, "tmpl": 13, "occur": 13, "skip": 13, "repot": 13, "halt": 13, "ssh": 13, "syntax": 13, "all_failur": 13, "all_warn": 13, "identifi": 13, "period": 15, "whenev": 15, "fit": 15, "adapt": 15, "basic": 15, "yml": 15, "storag": 15, "bare": 15, "tricki": 15, "develop": 15, "nor": 15, "collector": 15, "3": 15, "firstli": 15, "cron": 15, "bash": 15, "non_offici": 15, "travis_branch": 15, "z": 15, "travis_commit_rang": 15, "fi": 15, "retval": 15, "invoc": 15, "hipaa": 15, "team": 15, "soc2": 15, "sampl": 16, "81ddd37cb8aba90077a717b7d6c067815add58e658bb2be0dea4d4d9301c762d": 16, "xriu2dey1wscsrpbwhlar5xuv13vztm1n": 16, "kedcka85uoqjeqeo7xlmnpzbtkncieme6frhbmmboypw4ufys1eutlxkixykyjt3wklhl8ckvkdfoqamqg8ac": 16, "ccdqwp7d7slo5rh1pj1kp2yx2xb2mtmhkd": 16, "9tgunzbpacnscycmpbvng6okb7hbtoolvufky1twddim3jeffmeojqxgiezmmvnf": 16, "nlnif": 16, "pvptl": 16, "q38e6wd1xejpzyilk12imarzkf9mwea5d22xkv51pi2ils3jovxymzio26cskl7ihbsbinowwxoeto0aym2g9czhxnrgku9oekw97jgnaskjsw": 16, "cat": 16, "pub": 16, "miibijanbgkqhkig9w0baqefaaocaq8amiibcgkcaqeaxyosrynahnsuh3smnupn": 16, "zqhxjsdehqchkjrcyn19l8": 16, "vcjuuimsakroahuukp5pfwkoylryd4ayxiu9unxzg": 16, "diol2": 16, "r5xzxqfdlwi": 16, "pau": 16, "eewplaqfcpiodqkqblcyzpmojhv9gdqg8xjki": 16, "2i8j": 16, "7oiqlr7vibigrajxqf95kdnvbw7gvu8jhign4aogdbqspp": 16, "jj30wbvy7hhosrmwf": 16, "iqut7h25ybvozgwqec8hz2exruzg": 16, "fv2rkw52fatn31lx1eec2yz8ai7": 16, "yf": 16, "8c5j": 16, "ssl": 16, "pmzxbzh": 16, "p4zgdnlm2habpwaiqphnjj8xexi": 16, "rxuoynoberwfhm82tb9": 16, "lqidaqab": 16, "filesystem": 16, "openssl": 16, "dgst": 16, "Be": 16, "convert": 16, "d": 16, "sig": 16, "sigopt": 16, "rsa_padding_mod": 16, "pss": 16, "verif": 16, "assertequ": [1, 9], "unequ": 1}, "objects": {"": [[1, 0, 0, "-", "compliance"]], "compliance": [[1, 0, 0, "-", "agent"], [1, 0, 0, "-", "check"], [1, 0, 0, "-", "config"], [1, 0, 0, "-", "controls"], [1, 0, 0, "-", "evidence"], [1, 0, 0, "-", "fetch"], [1, 0, 0, "-", "fix"], [1, 0, 0, "-", "locker"], [1, 0, 0, "-", "notify"], [1, 0, 0, "-", "report"], [1, 0, 0, "-", "runners"], [2, 0, 0, "-", "scripts"], [3, 0, 0, "-", "utils"]], "compliance.agent": [[1, 1, 1, "", "ComplianceAgent"]], "compliance.agent.ComplianceAgent": [[1, 2, 1, "", "AGENTS_DIR"], [1, 2, 1, "", "PUBLIC_KEYS_EVIDENCE_PATH"], [1, 3, 1, "", "from_config"], [1, 3, 1, "", "get_path"], [1, 3, 1, "", "hash_and_sign"], [1, 3, 1, "", "load_public_key_from_locker"], [1, 4, 1, "", "name"], [1, 4, 1, "", "private_key"], [1, 4, 1, "", "public_key"], [1, 3, 1, "", "signable"], [1, 3, 1, "", "verifiable"], [1, 3, 1, "", "verify"]], "compliance.check": [[1, 1, 1, "", "ComplianceCheck"]], "compliance.check.ComplianceCheck": [[1, 3, 1, "", "add_evidence_metadata"], [1, 3, 1, "", "add_failures"], [1, 3, 1, "", "add_issue_if_diff"], [1, 3, 1, "", "add_successes"], [1, 3, 1, "", "add_warnings"], [1, 3, 1, "", "assertEquals"], [1, 4, 1, "", "evidence_metadata"], [1, 3, 1, "", "evidences_for_check"], [1, 4, 1, "", "failures"], [1, 3, 1, "", "failures_count"], [1, 3, 1, "", "failures_for_check"], [1, 3, 1, "", "failures_for_check_count"], [1, 4, 1, "", "fixed_failure_count"], [1, 3, 1, "", "get_historical_evidence"], [1, 3, 1, "", "id"], [1, 4, 1, "", "reports"], [1, 3, 1, "", "run"], [1, 4, 1, "", "runbook_url"], [1, 4, 1, "", "successes"], [1, 3, 1, "", "successes_count"], [1, 3, 1, "", "successes_for_check"], [1, 3, 1, "", "successes_for_check_count"], [1, 4, 1, "", "title"], [1, 3, 1, "", "total_issues_count"], [1, 4, 1, "", "warnings"], [1, 3, 1, "", "warnings_count"], [1, 3, 1, "", "warnings_for_check"], [1, 3, 1, "", "warnings_for_check_count"]], "compliance.config": [[1, 1, 1, "", "ComplianceConfig"], [1, 5, 1, "", "get_config"]], "compliance.config.ComplianceConfig": [[1, 2, 1, "", "DEFAULTS"], [1, 3, 1, "", "add_evidences"], [1, 4, 1, "", "creds"], [1, 4, 1, "", "evidences"], [1, 3, 1, "", "get"], [1, 3, 1, "", "get_evidence"], [1, 3, 1, "", "get_template_dir"], [1, 3, 1, "", "load"], [1, 4, 1, "", "raw_config"]], "compliance.controls": [[1, 1, 1, "", "ControlDescriptor"]], "compliance.controls.ControlDescriptor": [[1, 4, 1, "", "accred_checks"], [1, 4, 1, "", "as_dict"], [1, 3, 1, "", "get_accreditations"], [1, 3, 1, "", "is_test_included"], [1, 4, 1, "", "paths"]], "compliance.evidence": [[1, 1, 1, "", "DerivedEvidence"], [1, 1, 1, "", "ExternalEvidence"], [1, 1, 1, "", "LazyLoader"], [1, 1, 1, "", "RawEvidence"], [1, 1, 1, "", "ReportEvidence"], [1, 1, 1, "", "TmpEvidence"], [1, 1, 1, "", "derived_evidence"], [1, 1, 1, "", "evidences"], [1, 5, 1, "", "get_evidence_base_classes"], [1, 5, 1, "", "get_evidence_by_path"], [1, 5, 1, "", "get_evidence_class"], [1, 5, 1, "", "get_evidence_dependency"], [1, 5, 1, "", "get_evidence_types"], [1, 1, 1, "", "raw_evidence"], [1, 5, 1, "", "store_derived_evidence"], [1, 5, 1, "", "store_raw_evidence"], [1, 5, 1, "", "store_tmp_evidence"], [1, 1, 1, "", "tmp_evidence"], [1, 5, 1, "", "with_derived_evidences"], [1, 5, 1, "", "with_external_evidences"], [1, 5, 1, "", "with_raw_evidences"], [1, 5, 1, "", "with_tmp_evidences"]], "compliance.evidence.DerivedEvidence": [[1, 2, 1, "", "EVIDENCE_TYPE"]], "compliance.evidence.ExternalEvidence": [[1, 2, 1, "", "EVIDENCE_TYPE"]], "compliance.evidence.LazyLoader": [[1, 2, 1, "", "ev_class"], [1, 2, 1, "", "path"]], "compliance.evidence.RawEvidence": [[1, 2, 1, "", "EVIDENCE_TYPE"], [1, 3, 1, "", "get_partition"], [1, 4, 1, "", "is_partitioned"], [1, 4, 1, "", "partition_keys"]], "compliance.evidence.ReportEvidence": [[1, 2, 1, "", "EVIDENCE_TYPE"]], "compliance.evidence.TmpEvidence": [[1, 2, 1, "", "EVIDENCE_TYPE"]], "compliance.fetch": [[1, 1, 1, "", "ComplianceFetcher"], [1, 5, 1, "", "fetch"]], "compliance.fetch.ComplianceFetcher": [[1, 3, 1, "", "fetchCloudantDoc"], [1, 3, 1, "", "fetchLocalCommands"], [1, 3, 1, "", "fetchURL"], [1, 3, 1, "", "session"], [1, 3, 1, "", "tearDownClass"]], "compliance.fix": [[1, 1, 1, "", "Fixer"]], "compliance.fix.Fixer": [[1, 3, 1, "", "execute_fix"], [1, 3, 1, "", "fix"]], "compliance.locker": [[1, 1, 1, "", "Locker"], [1, 5, 1, "", "is_evidence_file"], [1, 5, 1, "", "is_index_file"]], "compliance.locker.Locker": [[1, 3, 1, "", "add_content_to_locker"], [1, 3, 1, "", "add_evidence"], [1, 3, 1, "", "checkin"], [1, 3, 1, "", "checkout"], [1, 4, 1, "", "clone_depth"], [1, 4, 1, "", "clone_shallow_since_days"], [1, 3, 1, "", "create_tombstone_metadata"], [1, 3, 1, "", "delete_repo_locally"], [1, 3, 1, "", "get_abandoned_evidences"], [1, 3, 1, "", "get_content_from_locker"], [1, 3, 1, "", "get_dependency_reruns"], [1, 3, 1, "", "get_empty_evidences"], [1, 3, 1, "", "get_evidence"], [1, 3, 1, "", "get_evidence_metadata"], [1, 3, 1, "", "get_file"], [1, 3, 1, "", "get_hash"], [1, 3, 1, "", "get_index_file"], [1, 3, 1, "", "get_index_file_by_path"], [1, 3, 1, "", "get_large_files"], [1, 3, 1, "", "get_latest_commit"], [1, 3, 1, "", "get_locker_repo"], [1, 3, 1, "", "get_remote_location"], [1, 3, 1, "", "get_reports_metadata"], [1, 4, 1, "", "head_commit_hexsha"], [1, 3, 1, "", "index"], [1, 3, 1, "", "init"], [1, 3, 1, "", "init_config"], [1, 3, 1, "", "load_content"], [1, 2, 1, "", "lock"], [1, 3, 1, "", "logger_init_msgs"], [1, 3, 1, "", "push"], [1, 3, 1, "", "remove_partitions"], [1, 3, 1, "", "reset_depenency_rerun"], [1, 4, 1, "", "touched_files"], [1, 3, 1, "", "validate"], [1, 3, 1, "", "write_pkg_indexes"]], "compliance.notify": [[1, 1, 1, "", "FDNotifier"], [1, 1, 1, "", "GHIssuesNotifier"], [1, 1, 1, "", "LockerNotifier"], [1, 1, 1, "", "PagerDutyNotifier"], [1, 1, 1, "", "SlackNotifier"], [1, 5, 1, "", "get_notifiers"]], "compliance.notify.FDNotifier": [[1, 3, 1, "", "notify"]], "compliance.notify.GHIssuesNotifier": [[1, 3, 1, "", "notify"]], "compliance.notify.LockerNotifier": [[1, 3, 1, "", "notify"]], "compliance.notify.PagerDutyNotifier": [[1, 3, 1, "", "notify"]], "compliance.notify.SlackNotifier": [[1, 2, 1, "", "MESSAGE_COLORS"], [1, 3, 1, "", "notify"]], "compliance.report": [[1, 1, 1, "", "ReportBuilder"]], "compliance.report.ReportBuilder": [[1, 3, 1, "", "build"], [1, 3, 1, "", "generate_check_results"], [1, 3, 1, "", "generate_toc"], [1, 3, 1, "", "get_template_for"], [1, 3, 1, "", "render_evidence_with_template"]], "compliance.runners": [[1, 1, 1, "", "CheckMode"], [1, 1, 1, "", "ComplianceBaseResult"], [1, 1, 1, "", "ComplianceCheckResult"], [1, 1, 1, "", "ComplianceTestWrapper"], [1, 1, 1, "", "FetchMode"]], "compliance.runners.CheckMode": [[1, 3, 1, "", "build_reports"], [1, 3, 1, "", "fix_failures"], [1, 3, 1, "", "get_checks"], [1, 3, 1, "", "init_config"], [1, 3, 1, "", "run_checks"], [1, 3, 1, "", "run_notifiers"]], "compliance.runners.ComplianceBaseResult": [[1, 3, 1, "", "startTest"], [1, 3, 1, "", "stopTest"]], "compliance.runners.ComplianceCheckResult": [[1, 3, 1, "", "addError"], [1, 3, 1, "", "addFailure"], [1, 3, 1, "", "addSuccess"], [1, 3, 1, "", "record"]], "compliance.runners.FetchMode": [[1, 3, 1, "", "get_fetchers"], [1, 3, 1, "", "run_fetchers"]], "compliance.scripts": [[2, 0, 0, "-", "compliance_cli"]], "compliance.scripts.compliance_cli": [[2, 1, 1, "", "ComplianceCLI"], [2, 5, 1, "", "run"]], "compliance.scripts.compliance_cli.ComplianceCLI": [[2, 2, 1, "", "name"]], "compliance.utils": [[3, 0, 0, "-", "credentials"], [3, 0, 0, "-", "data_parse"], [3, 0, 0, "-", "exceptions"], [3, 0, 0, "-", "http"], [3, 0, 0, "-", "path"], [4, 0, 0, "-", "services"], [3, 0, 0, "-", "test"]], "compliance.utils.credentials": [[3, 1, 1, "", "Config"]], "compliance.utils.credentials.Config": [[3, 3, 1, "", "get"]], "compliance.utils.data_parse": [[3, 5, 1, "", "deep_merge"], [3, 5, 1, "", "format_json"], [3, 5, 1, "", "get_sha256_hash"], [3, 5, 1, "", "parse_dot_key"]], "compliance.utils.exceptions": [[3, 6, 1, "", "DependencyFetcherNotFoundError"], [3, 6, 1, "", "DependencyUnavailableError"], [3, 6, 1, "", "EvidenceNotFoundError"], [3, 6, 1, "", "HistoricalEvidenceNotFoundError"], [3, 6, 1, "", "LockerPushError"], [3, 6, 1, "", "StaleEvidenceError"], [3, 6, 1, "", "UnverifiedEvidenceError"]], "compliance.utils.http": [[3, 1, 1, "", "BaseSession"]], "compliance.utils.http.BaseSession": [[3, 3, 1, "", "prepare_request"]], "compliance.utils.path": [[3, 5, 1, "", "get_module_path"], [3, 5, 1, "", "get_toplevel_dirpath"], [3, 5, 1, "", "load_evidences_modules"], [3, 5, 1, "", "substitute_config"]], "compliance.utils.services": [[4, 0, 0, "-", "github"], [4, 0, 0, "-", "pagerduty"]], "compliance.utils.services.github": [[4, 1, 1, "", "Github"], [4, 5, 1, "", "extract_annotations"]], "compliance.utils.services.github.Github": [[4, 3, 1, "", "add_card"], [4, 3, 1, "", "add_issue"], [4, 3, 1, "", "add_issue_comment"], [4, 3, 1, "", "add_milestone"], [4, 3, 1, "", "apply_labels"], [4, 3, 1, "", "create_column"], [4, 3, 1, "", "create_label"], [4, 3, 1, "", "create_project"], [4, 3, 1, "", "creates_for_project"], [4, 3, 1, "", "extract_owner_repo"], [4, 3, 1, "", "extract_owner_repo_issue"], [4, 3, 1, "", "extract_path_chunks"], [4, 3, 1, "", "get_all_cards"], [4, 3, 1, "", "get_all_issues"], [4, 3, 1, "", "get_all_projects"], [4, 3, 1, "", "get_branch_protection_details"], [4, 3, 1, "", "get_cards"], [4, 3, 1, "", "get_columns"], [4, 3, 1, "", "get_commit_details"], [4, 3, 1, "", "get_issue"], [4, 3, 1, "", "get_issue_comments"], [4, 3, 1, "", "get_issues_page"], [4, 3, 1, "", "get_project"], [4, 3, 1, "", "get_pull_requests"], [4, 3, 1, "", "get_repo_details"], [4, 3, 1, "", "list_milestones"], [4, 3, 1, "", "make_request"], [4, 3, 1, "", "move_card"], [4, 3, 1, "", "paginate_api"], [4, 3, 1, "", "patch_issue"], [4, 3, 1, "", "rand_color"], [4, 3, 1, "", "remove_labels"], [4, 3, 1, "", "search_issues"], [4, 3, 1, "", "update_annotations"]], "compliance.utils.services.pagerduty": [[4, 5, 1, "", "delete"], [4, 5, 1, "", "get"], [4, 5, 1, "", "post"], [4, 5, 1, "", "put"], [4, 5, 1, "", "send_event"]], "compliance.utils.test": [[3, 5, 1, "", "parse_test_id"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"code": [0, 8], "standard": 0, "avoid": 0, "smell": 0, "third": 0, "parti": 0, "stuff": 0, "alwai": 0, "test": [0, 3], "complianc": [1, 2, 3, 4, 5, 9], "packag": [1, 2, 3, 4], "subpackag": [1, 3], "submodul": [1, 2, 3, 4], "agent": [1, 12], "modul": [1, 2, 3, 4], "check": [1, 5, 10], "config": [1, 5], "control": [1, 12], "evid": [1, 5, 6, 10, 12, 16], "fetch": 1, "fix": 1, "locker": [1, 5, 10, 12], "notifi": [1, 5, 10], "report": [1, 5, 13], "runner": 1, "content": [1, 2, 3, 4], "script": 2, "compliance_cli": 2, "util": [3, 4], "credenti": [3, 5, 15], "data_pars": 3, "except": 3, "http": 3, "path": 3, "servic": 4, "github": [4, 10], "pagerduti": [4, 10], "design": 5, "principl": 5, "fetcher": 5, "valid": 5, "depend": 5, "chain": 5, "execut": 5, "fixer": [5, 7], "builder": [5, 13], "cred": 5, "env": 5, "file": [5, 10], "1password": 5, "partit": 6, "By": 6, "configur": [6, 12], "exampl": 6, "default": 6, "root": 6, "explicit": 6, "auditre": 8, "framework": 8, "document": 8, "instal": 8, "For": 8, "user": 8, "develop": 8, "guid": 8, "sourc": 8, "descriptor": 10, "slack": 10, "issu": 10, "gh": 10, "summari": 10, "accredit": 10, "per": 10, "oscal": 11, "support": 11, "quick": 12, "start": 12, "advanc": 12, "topic": 12, "json": 12, "remot": 12, "notif": 12, "recommend": 12, "templat": 13, "run": [14, 15], "tekton": 14, "travi": 15, "artifact": 15, "sh": 15, "verifi": 16, "sign": 16}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Coding Standards": [[0, "coding-standards"]], "Avoid code smells": [[0, "avoid-code-smells"]], "Avoid third-party stuff": [[0, "avoid-third-party-stuff"]], "Always Test": [[0, "always-test"]], "compliance package": [[1, "compliance-package"]], "Subpackages": [[1, "subpackages"], [3, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"]], "compliance.agent module": [[1, "module-compliance.agent"]], "compliance.check module": [[1, "module-compliance.check"]], "compliance.config module": [[1, "module-compliance.config"]], "compliance.controls module": [[1, "module-compliance.controls"]], "compliance.evidence module": [[1, "module-compliance.evidence"]], "compliance.fetch module": [[1, "module-compliance.fetch"]], "compliance.fix module": [[1, "module-compliance.fix"]], "compliance.locker module": [[1, "module-compliance.locker"]], "compliance.notify module": [[1, "module-compliance.notify"]], "compliance.report module": [[1, "module-compliance.report"]], "compliance.runners module": [[1, "module-compliance.runners"]], "Module contents": [[1, "module-compliance"], [2, "module-compliance.scripts"], [3, "module-compliance.utils"], [4, "module-compliance.utils.services"]], "compliance.scripts package": [[2, "compliance-scripts-package"]], "compliance.scripts.compliance_cli module": [[2, "module-compliance.scripts.compliance_cli"]], "compliance.utils package": [[3, "compliance-utils-package"]], "compliance.utils.credentials module": [[3, "module-compliance.utils.credentials"]], "compliance.utils.data_parse module": [[3, "module-compliance.utils.data_parse"]], "compliance.utils.exceptions module": [[3, "module-compliance.utils.exceptions"]], "compliance.utils.http module": [[3, "module-compliance.utils.http"]], "compliance.utils.path module": [[3, "module-compliance.utils.path"]], "compliance.utils.test module": [[3, "module-compliance.utils.test"]], "compliance.utils.services package": [[4, "compliance-utils-services-package"]], "compliance.utils.services.github module": [[4, "module-compliance.utils.services.github"]], "compliance.utils.services.pagerduty module": [[4, "module-compliance.utils.services.pagerduty"]], "Design Principles": [[5, "design-principles"]], "Evidence": [[5, "evidence"]], "Evidence Locker": [[5, "evidence-locker"], [10, "evidence-locker"]], "Compliance Fetchers": [[5, "compliance-fetchers"]], "Evidence Validation": [[5, "evidence-validation"], [5, "id2"]], "Evidence Dependency Chaining": [[5, "evidence-dependency-chaining"]], "Fetcher Execution": [[5, "fetcher-execution"]], "Compliance Checks": [[5, "compliance-checks"]], "Check Execution": [[5, "check-execution"]], "Fixers": [[5, "fixers"], [7, "fixers"]], "Report Builder": [[5, "report-builder"], [13, "report-builder"]], "Notifiers": [[5, "notifiers"], [10, "notifiers"]], "Execution Config": [[5, "execution-config"]], "Credentials": [[5, "credentials"], [15, "credentials"]], "Creds with .env files and 1Password": [[5, "creds-with-env-files-and-1password"]], "Partitioned Evidence": [[6, "partitioned-evidence"]], "Partition By Configuration": [[6, "partition-by-configuration"]], "Partition By Evidence": [[6, "partition-by-evidence"]], "Examples": [[6, "examples"]], "Default Partition Root": [[6, "default-partition-root"]], "Explicit Partition Root": [[6, "explicit-partition-root"]], "Auditree framework documentation": [[8, "auditree-framework-documentation"]], "Installation": [[8, "installation"]], "For users": [[8, "for-users"]], "For developers": [[8, "for-developers"]], "Guides": [[8, "guides"]], "Source code": [[8, "source-code"]], "compliance": [[9, "compliance"]], "File descriptor": [[10, "file-descriptor"]], "Slack": [[10, "slack"]], "PagerDuty": [[10, "pagerduty"]], "GitHub Issue": [[10, "github-issue"]], "GH Summary Issue by Accreditation": [[10, "gh-summary-issue-by-accreditation"]], "GH Issue Per Check": [[10, "gh-issue-per-check"]], "OSCAL Support": [[11, "oscal-support"]], "Quick Start": [[12, "quick-start"]], "Advanced Topics": [[12, "advanced-topics"]], "Configuration": [[12, "configuration"]], "controls.json": [[12, "controls-json"]], "Agents": [[12, "agents"]], "Remote Evidence Locker": [[12, "remote-evidence-locker"]], "Notifications": [[12, "notifications"]], "Recommendations": [[12, "recommendations"]], "Report templates": [[13, "report-templates"]], "Running on Tekton": [[14, "running-on-tekton"]], "Running on Travis": [[15, "running-on-travis"]], "Travis artifacts": [[15, "travis-artifacts"]], "travis/run.sh": [[15, "travis-run-sh"]], "Verifying Signed Evidence": [[16, "verifying-signed-evidence"]]}, "indexentries": {"agents_dir (compliance.agent.complianceagent attribute)": [[1, "compliance.agent.ComplianceAgent.AGENTS_DIR"]], "checkmode (class in compliance.runners)": [[1, "compliance.runners.CheckMode"]], "complianceagent (class in compliance.agent)": [[1, "compliance.agent.ComplianceAgent"]], "compliancebaseresult (class in compliance.runners)": [[1, "compliance.runners.ComplianceBaseResult"]], "compliancecheck (class in compliance.check)": [[1, "compliance.check.ComplianceCheck"]], "compliancecheckresult (class in compliance.runners)": [[1, "compliance.runners.ComplianceCheckResult"]], "complianceconfig (class in compliance.config)": [[1, "compliance.config.ComplianceConfig"]], "compliancefetcher (class in compliance.fetch)": [[1, "compliance.fetch.ComplianceFetcher"]], "compliancetestwrapper (class in compliance.runners)": [[1, "compliance.runners.ComplianceTestWrapper"]], "controldescriptor (class in compliance.controls)": [[1, "compliance.controls.ControlDescriptor"]], "defaults (compliance.config.complianceconfig attribute)": [[1, "compliance.config.ComplianceConfig.DEFAULTS"]], "derivedevidence (class in compliance.evidence)": [[1, "compliance.evidence.DerivedEvidence"]], "evidence_type (compliance.evidence.derivedevidence attribute)": [[1, "compliance.evidence.DerivedEvidence.EVIDENCE_TYPE"]], "evidence_type (compliance.evidence.externalevidence attribute)": [[1, "compliance.evidence.ExternalEvidence.EVIDENCE_TYPE"]], "evidence_type (compliance.evidence.rawevidence attribute)": [[1, "compliance.evidence.RawEvidence.EVIDENCE_TYPE"]], "evidence_type (compliance.evidence.reportevidence attribute)": [[1, "compliance.evidence.ReportEvidence.EVIDENCE_TYPE"]], "evidence_type (compliance.evidence.tmpevidence attribute)": [[1, "compliance.evidence.TmpEvidence.EVIDENCE_TYPE"]], "externalevidence (class in compliance.evidence)": [[1, "compliance.evidence.ExternalEvidence"]], "fdnotifier (class in compliance.notify)": [[1, "compliance.notify.FDNotifier"]], "fetchmode (class in compliance.runners)": [[1, "compliance.runners.FetchMode"]], "fixer (class in compliance.fix)": [[1, "compliance.fix.Fixer"]], "ghissuesnotifier (class in compliance.notify)": [[1, "compliance.notify.GHIssuesNotifier"]], "lazyloader (class in compliance.evidence)": [[1, "compliance.evidence.LazyLoader"]], "locker (class in compliance.locker)": [[1, "compliance.locker.Locker"]], "lockernotifier (class in compliance.notify)": [[1, "compliance.notify.LockerNotifier"]], "message_colors (compliance.notify.slacknotifier attribute)": [[1, "compliance.notify.SlackNotifier.MESSAGE_COLORS"]], "public_keys_evidence_path (compliance.agent.complianceagent attribute)": [[1, "compliance.agent.ComplianceAgent.PUBLIC_KEYS_EVIDENCE_PATH"]], "pagerdutynotifier (class in compliance.notify)": [[1, "compliance.notify.PagerDutyNotifier"]], "rawevidence (class in compliance.evidence)": [[1, "compliance.evidence.RawEvidence"]], "reportbuilder (class in compliance.report)": [[1, "compliance.report.ReportBuilder"]], "reportevidence (class in compliance.evidence)": [[1, "compliance.evidence.ReportEvidence"]], "slacknotifier (class in compliance.notify)": [[1, "compliance.notify.SlackNotifier"]], "tmpevidence (class in compliance.evidence)": [[1, "compliance.evidence.TmpEvidence"]], "accred_checks (compliance.controls.controldescriptor property)": [[1, "compliance.controls.ControlDescriptor.accred_checks"]], "adderror() (compliance.runners.compliancecheckresult method)": [[1, "compliance.runners.ComplianceCheckResult.addError"]], "addfailure() (compliance.runners.compliancecheckresult method)": [[1, "compliance.runners.ComplianceCheckResult.addFailure"]], "addsuccess() (compliance.runners.compliancecheckresult method)": [[1, "compliance.runners.ComplianceCheckResult.addSuccess"]], "add_content_to_locker() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.add_content_to_locker"]], "add_evidence() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.add_evidence"]], "add_evidence_metadata() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.add_evidence_metadata"]], "add_evidences() (compliance.config.complianceconfig method)": [[1, "compliance.config.ComplianceConfig.add_evidences"]], "add_failures() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.add_failures"]], "add_issue_if_diff() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.add_issue_if_diff"]], "add_successes() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.add_successes"]], "add_warnings() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.add_warnings"]], "as_dict (compliance.controls.controldescriptor property)": [[1, "compliance.controls.ControlDescriptor.as_dict"]], "assertequals() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.assertEquals"]], "build() (compliance.report.reportbuilder method)": [[1, "compliance.report.ReportBuilder.build"]], "build_reports() (compliance.runners.checkmode method)": [[1, "compliance.runners.CheckMode.build_reports"]], "checkin() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.checkin"]], "checkout() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.checkout"]], "clone_depth (compliance.locker.locker property)": [[1, "compliance.locker.Locker.clone_depth"]], "clone_shallow_since_days (compliance.locker.locker property)": [[1, "compliance.locker.Locker.clone_shallow_since_days"]], "compliance": [[1, "module-compliance"]], "compliance.agent": [[1, "module-compliance.agent"]], "compliance.check": [[1, "module-compliance.check"]], "compliance.config": [[1, "module-compliance.config"]], "compliance.controls": [[1, "module-compliance.controls"]], "compliance.evidence": [[1, "module-compliance.evidence"]], "compliance.fetch": [[1, "module-compliance.fetch"]], "compliance.fix": [[1, "module-compliance.fix"]], "compliance.locker": [[1, "module-compliance.locker"]], "compliance.notify": [[1, "module-compliance.notify"]], "compliance.report": [[1, "module-compliance.report"]], "compliance.runners": [[1, "module-compliance.runners"]], "create_tombstone_metadata() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.create_tombstone_metadata"]], "creds (compliance.config.complianceconfig property)": [[1, "compliance.config.ComplianceConfig.creds"]], "delete_repo_locally() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.delete_repo_locally"]], "derived_evidence (class in compliance.evidence)": [[1, "compliance.evidence.derived_evidence"]], "ev_class (compliance.evidence.lazyloader attribute)": [[1, "compliance.evidence.LazyLoader.ev_class"]], "evidence_metadata (compliance.check.compliancecheck property)": [[1, "compliance.check.ComplianceCheck.evidence_metadata"]], "evidences (class in compliance.evidence)": [[1, "compliance.evidence.evidences"]], "evidences (compliance.config.complianceconfig property)": [[1, "compliance.config.ComplianceConfig.evidences"]], "evidences_for_check() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.evidences_for_check"]], "execute_fix() (compliance.fix.fixer method)": [[1, "compliance.fix.Fixer.execute_fix"]], "failures (compliance.check.compliancecheck property)": [[1, "compliance.check.ComplianceCheck.failures"]], "failures_count() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.failures_count"]], "failures_for_check() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.failures_for_check"]], "failures_for_check_count() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.failures_for_check_count"]], "fetch() (in module compliance.fetch)": [[1, "compliance.fetch.fetch"]], "fetchcloudantdoc() (compliance.fetch.compliancefetcher method)": [[1, "compliance.fetch.ComplianceFetcher.fetchCloudantDoc"]], "fetchlocalcommands() (compliance.fetch.compliancefetcher method)": [[1, "compliance.fetch.ComplianceFetcher.fetchLocalCommands"]], "fetchurl() (compliance.fetch.compliancefetcher method)": [[1, "compliance.fetch.ComplianceFetcher.fetchURL"]], "fix() (compliance.fix.fixer method)": [[1, "compliance.fix.Fixer.fix"]], "fix_failures() (compliance.runners.checkmode method)": [[1, "compliance.runners.CheckMode.fix_failures"]], "fixed_failure_count (compliance.check.compliancecheck property)": [[1, "compliance.check.ComplianceCheck.fixed_failure_count"]], "from_config() (compliance.agent.complianceagent class method)": [[1, "compliance.agent.ComplianceAgent.from_config"]], "generate_check_results() (compliance.report.reportbuilder method)": [[1, "compliance.report.ReportBuilder.generate_check_results"]], "generate_toc() (compliance.report.reportbuilder method)": [[1, "compliance.report.ReportBuilder.generate_toc"]], "get() (compliance.config.complianceconfig method)": [[1, "compliance.config.ComplianceConfig.get"]], "get_abandoned_evidences() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_abandoned_evidences"]], "get_accreditations() (compliance.controls.controldescriptor method)": [[1, "compliance.controls.ControlDescriptor.get_accreditations"]], "get_checks() (compliance.runners.checkmode method)": [[1, "compliance.runners.CheckMode.get_checks"]], "get_config() (in module compliance.config)": [[1, "compliance.config.get_config"]], "get_content_from_locker() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_content_from_locker"]], "get_dependency_reruns() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_dependency_reruns"]], "get_empty_evidences() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_empty_evidences"]], "get_evidence() (compliance.config.complianceconfig method)": [[1, "compliance.config.ComplianceConfig.get_evidence"]], "get_evidence() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_evidence"]], "get_evidence_base_classes() (in module compliance.evidence)": [[1, "compliance.evidence.get_evidence_base_classes"]], "get_evidence_by_path() (in module compliance.evidence)": [[1, "compliance.evidence.get_evidence_by_path"]], "get_evidence_class() (in module compliance.evidence)": [[1, "compliance.evidence.get_evidence_class"]], "get_evidence_dependency() (in module compliance.evidence)": [[1, "compliance.evidence.get_evidence_dependency"]], "get_evidence_metadata() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_evidence_metadata"]], "get_evidence_types() (in module compliance.evidence)": [[1, "compliance.evidence.get_evidence_types"]], "get_fetchers() (compliance.runners.fetchmode method)": [[1, "compliance.runners.FetchMode.get_fetchers"]], "get_file() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_file"]], "get_hash() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_hash"]], "get_historical_evidence() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.get_historical_evidence"]], "get_index_file() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_index_file"]], "get_index_file_by_path() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_index_file_by_path"]], "get_large_files() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_large_files"]], "get_latest_commit() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_latest_commit"]], "get_locker_repo() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_locker_repo"]], "get_notifiers() (in module compliance.notify)": [[1, "compliance.notify.get_notifiers"]], "get_partition() (compliance.evidence.rawevidence method)": [[1, "compliance.evidence.RawEvidence.get_partition"]], "get_path() (compliance.agent.complianceagent method)": [[1, "compliance.agent.ComplianceAgent.get_path"]], "get_remote_location() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_remote_location"]], "get_reports_metadata() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.get_reports_metadata"]], "get_template_dir() (compliance.config.complianceconfig method)": [[1, "compliance.config.ComplianceConfig.get_template_dir"]], "get_template_for() (compliance.report.reportbuilder method)": [[1, "compliance.report.ReportBuilder.get_template_for"]], "hash_and_sign() (compliance.agent.complianceagent method)": [[1, "compliance.agent.ComplianceAgent.hash_and_sign"]], "head_commit_hexsha (compliance.locker.locker property)": [[1, "compliance.locker.Locker.head_commit_hexsha"]], "id() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.id"]], "index() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.index"]], "init() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.init"]], "init_config() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.init_config"]], "init_config() (compliance.runners.checkmode method)": [[1, "compliance.runners.CheckMode.init_config"]], "is_evidence_file() (in module compliance.locker)": [[1, "compliance.locker.is_evidence_file"]], "is_index_file() (in module compliance.locker)": [[1, "compliance.locker.is_index_file"]], "is_partitioned (compliance.evidence.rawevidence property)": [[1, "compliance.evidence.RawEvidence.is_partitioned"]], "is_test_included() (compliance.controls.controldescriptor method)": [[1, "compliance.controls.ControlDescriptor.is_test_included"]], "load() (compliance.config.complianceconfig method)": [[1, "compliance.config.ComplianceConfig.load"]], "load_content() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.load_content"]], "load_public_key_from_locker() (compliance.agent.complianceagent method)": [[1, "compliance.agent.ComplianceAgent.load_public_key_from_locker"]], "lock (compliance.locker.locker attribute)": [[1, "compliance.locker.Locker.lock"]], "logger_init_msgs() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.logger_init_msgs"]], "module": [[1, "module-compliance"], [1, "module-compliance.agent"], [1, "module-compliance.check"], [1, "module-compliance.config"], [1, "module-compliance.controls"], [1, "module-compliance.evidence"], [1, "module-compliance.fetch"], [1, "module-compliance.fix"], [1, "module-compliance.locker"], [1, "module-compliance.notify"], [1, "module-compliance.report"], [1, "module-compliance.runners"], [2, "module-compliance.scripts"], [2, "module-compliance.scripts.compliance_cli"], [3, "module-compliance.utils"], [3, "module-compliance.utils.credentials"], [3, "module-compliance.utils.data_parse"], [3, "module-compliance.utils.exceptions"], [3, "module-compliance.utils.http"], [3, "module-compliance.utils.path"], [3, "module-compliance.utils.test"], [4, "module-compliance.utils.services"], [4, "module-compliance.utils.services.github"], [4, "module-compliance.utils.services.pagerduty"]], "name (compliance.agent.complianceagent property)": [[1, "compliance.agent.ComplianceAgent.name"]], "notify() (compliance.notify.fdnotifier method)": [[1, "compliance.notify.FDNotifier.notify"]], "notify() (compliance.notify.ghissuesnotifier method)": [[1, "compliance.notify.GHIssuesNotifier.notify"]], "notify() (compliance.notify.lockernotifier method)": [[1, "compliance.notify.LockerNotifier.notify"]], "notify() (compliance.notify.pagerdutynotifier method)": [[1, "compliance.notify.PagerDutyNotifier.notify"]], "notify() (compliance.notify.slacknotifier method)": [[1, "compliance.notify.SlackNotifier.notify"]], "partition_keys (compliance.evidence.rawevidence property)": [[1, "compliance.evidence.RawEvidence.partition_keys"]], "path (compliance.evidence.lazyloader attribute)": [[1, "compliance.evidence.LazyLoader.path"]], "paths (compliance.controls.controldescriptor property)": [[1, "compliance.controls.ControlDescriptor.paths"]], "private_key (compliance.agent.complianceagent property)": [[1, "compliance.agent.ComplianceAgent.private_key"]], "public_key (compliance.agent.complianceagent property)": [[1, "compliance.agent.ComplianceAgent.public_key"]], "push() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.push"]], "raw_config (compliance.config.complianceconfig property)": [[1, "compliance.config.ComplianceConfig.raw_config"]], "raw_evidence (class in compliance.evidence)": [[1, "compliance.evidence.raw_evidence"]], "record() (compliance.runners.compliancecheckresult method)": [[1, "compliance.runners.ComplianceCheckResult.record"]], "remove_partitions() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.remove_partitions"]], "render_evidence_with_template() (compliance.report.reportbuilder method)": [[1, "compliance.report.ReportBuilder.render_evidence_with_template"]], "reports (compliance.check.compliancecheck property)": [[1, "compliance.check.ComplianceCheck.reports"]], "reset_depenency_rerun() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.reset_depenency_rerun"]], "run() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.run"]], "run_checks() (compliance.runners.checkmode method)": [[1, "compliance.runners.CheckMode.run_checks"]], "run_fetchers() (compliance.runners.fetchmode method)": [[1, "compliance.runners.FetchMode.run_fetchers"]], "run_notifiers() (compliance.runners.checkmode method)": [[1, "compliance.runners.CheckMode.run_notifiers"]], "runbook_url (compliance.check.compliancecheck property)": [[1, "compliance.check.ComplianceCheck.runbook_url"]], "session() (compliance.fetch.compliancefetcher class method)": [[1, "compliance.fetch.ComplianceFetcher.session"]], "signable() (compliance.agent.complianceagent method)": [[1, "compliance.agent.ComplianceAgent.signable"]], "starttest() (compliance.runners.compliancebaseresult method)": [[1, "compliance.runners.ComplianceBaseResult.startTest"]], "stoptest() (compliance.runners.compliancebaseresult method)": [[1, "compliance.runners.ComplianceBaseResult.stopTest"]], "store_derived_evidence() (in module compliance.evidence)": [[1, "compliance.evidence.store_derived_evidence"]], "store_raw_evidence() (in module compliance.evidence)": [[1, "compliance.evidence.store_raw_evidence"]], "store_tmp_evidence() (in module compliance.evidence)": [[1, "compliance.evidence.store_tmp_evidence"]], "successes (compliance.check.compliancecheck property)": [[1, "compliance.check.ComplianceCheck.successes"]], "successes_count() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.successes_count"]], "successes_for_check() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.successes_for_check"]], "successes_for_check_count() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.successes_for_check_count"]], "teardownclass() (compliance.fetch.compliancefetcher class method)": [[1, "compliance.fetch.ComplianceFetcher.tearDownClass"]], "title (compliance.check.compliancecheck property)": [[1, "compliance.check.ComplianceCheck.title"]], "tmp_evidence (class in compliance.evidence)": [[1, "compliance.evidence.tmp_evidence"]], "total_issues_count() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.total_issues_count"]], "touched_files (compliance.locker.locker property)": [[1, "compliance.locker.Locker.touched_files"]], "validate() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.validate"]], "verifiable() (compliance.agent.complianceagent method)": [[1, "compliance.agent.ComplianceAgent.verifiable"]], "verify() (compliance.agent.complianceagent method)": [[1, "compliance.agent.ComplianceAgent.verify"]], "warnings (compliance.check.compliancecheck property)": [[1, "compliance.check.ComplianceCheck.warnings"]], "warnings_count() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.warnings_count"]], "warnings_for_check() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.warnings_for_check"]], "warnings_for_check_count() (compliance.check.compliancecheck method)": [[1, "compliance.check.ComplianceCheck.warnings_for_check_count"]], "with_derived_evidences() (in module compliance.evidence)": [[1, "compliance.evidence.with_derived_evidences"]], "with_external_evidences() (in module compliance.evidence)": [[1, "compliance.evidence.with_external_evidences"]], "with_raw_evidences() (in module compliance.evidence)": [[1, "compliance.evidence.with_raw_evidences"]], "with_tmp_evidences() (in module compliance.evidence)": [[1, "compliance.evidence.with_tmp_evidences"]], "write_pkg_indexes() (compliance.locker.locker method)": [[1, "compliance.locker.Locker.write_pkg_indexes"]], "compliancecli (class in compliance.scripts.compliance_cli)": [[2, "compliance.scripts.compliance_cli.ComplianceCLI"]], "compliance.scripts": [[2, "module-compliance.scripts"]], "compliance.scripts.compliance_cli": [[2, "module-compliance.scripts.compliance_cli"]], "name (compliance.scripts.compliance_cli.compliancecli attribute)": [[2, "compliance.scripts.compliance_cli.ComplianceCLI.name"]], "run() (in module compliance.scripts.compliance_cli)": [[2, "compliance.scripts.compliance_cli.run"]], "basesession (class in compliance.utils.http)": [[3, "compliance.utils.http.BaseSession"]], "config (class in compliance.utils.credentials)": [[3, "compliance.utils.credentials.Config"]], "dependencyfetchernotfounderror": [[3, "compliance.utils.exceptions.DependencyFetcherNotFoundError"]], "dependencyunavailableerror": [[3, "compliance.utils.exceptions.DependencyUnavailableError"]], "evidencenotfounderror": [[3, "compliance.utils.exceptions.EvidenceNotFoundError"]], "historicalevidencenotfounderror": [[3, "compliance.utils.exceptions.HistoricalEvidenceNotFoundError"]], "lockerpusherror": [[3, "compliance.utils.exceptions.LockerPushError"]], "staleevidenceerror": [[3, "compliance.utils.exceptions.StaleEvidenceError"]], "unverifiedevidenceerror": [[3, "compliance.utils.exceptions.UnverifiedEvidenceError"]], "compliance.utils": [[3, "module-compliance.utils"]], "compliance.utils.credentials": [[3, "module-compliance.utils.credentials"]], "compliance.utils.data_parse": [[3, "module-compliance.utils.data_parse"]], "compliance.utils.exceptions": [[3, "module-compliance.utils.exceptions"]], "compliance.utils.http": [[3, "module-compliance.utils.http"]], "compliance.utils.path": [[3, "module-compliance.utils.path"]], "compliance.utils.test": [[3, "module-compliance.utils.test"]], "deep_merge() (in module compliance.utils.data_parse)": [[3, "compliance.utils.data_parse.deep_merge"]], "format_json() (in module compliance.utils.data_parse)": [[3, "compliance.utils.data_parse.format_json"]], "get() (compliance.utils.credentials.config method)": [[3, "compliance.utils.credentials.Config.get"]], "get_module_path() (in module compliance.utils.path)": [[3, "compliance.utils.path.get_module_path"]], "get_sha256_hash() (in module compliance.utils.data_parse)": [[3, "compliance.utils.data_parse.get_sha256_hash"]], "get_toplevel_dirpath() (in module compliance.utils.path)": [[3, "compliance.utils.path.get_toplevel_dirpath"]], "load_evidences_modules() (in module compliance.utils.path)": [[3, "compliance.utils.path.load_evidences_modules"]], "parse_dot_key() (in module compliance.utils.data_parse)": [[3, "compliance.utils.data_parse.parse_dot_key"]], "parse_test_id() (in module compliance.utils.test)": [[3, "compliance.utils.test.parse_test_id"]], "prepare_request() (compliance.utils.http.basesession method)": [[3, "compliance.utils.http.BaseSession.prepare_request"]], "substitute_config() (in module compliance.utils.path)": [[3, "compliance.utils.path.substitute_config"]], "github (class in compliance.utils.services.github)": [[4, "compliance.utils.services.github.Github"]], "add_card() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.add_card"]], "add_issue() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.add_issue"]], "add_issue_comment() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.add_issue_comment"]], "add_milestone() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.add_milestone"]], "apply_labels() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.apply_labels"]], "compliance.utils.services": [[4, "module-compliance.utils.services"]], "compliance.utils.services.github": [[4, "module-compliance.utils.services.github"]], "compliance.utils.services.pagerduty": [[4, "module-compliance.utils.services.pagerduty"]], "create_column() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.create_column"]], "create_label() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.create_label"]], "create_project() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.create_project"]], "creates_for_project() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.creates_for_project"]], "delete() (in module compliance.utils.services.pagerduty)": [[4, "compliance.utils.services.pagerduty.delete"]], "extract_annotations() (in module compliance.utils.services.github)": [[4, "compliance.utils.services.github.extract_annotations"]], "extract_owner_repo() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.extract_owner_repo"]], "extract_owner_repo_issue() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.extract_owner_repo_issue"]], "extract_path_chunks() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.extract_path_chunks"]], "get() (in module compliance.utils.services.pagerduty)": [[4, "compliance.utils.services.pagerduty.get"]], "get_all_cards() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_all_cards"]], "get_all_issues() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_all_issues"]], "get_all_projects() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_all_projects"]], "get_branch_protection_details() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_branch_protection_details"]], "get_cards() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_cards"]], "get_columns() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_columns"]], "get_commit_details() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_commit_details"]], "get_issue() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_issue"]], "get_issue_comments() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_issue_comments"]], "get_issues_page() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_issues_page"]], "get_project() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_project"]], "get_pull_requests() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_pull_requests"]], "get_repo_details() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.get_repo_details"]], "list_milestones() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.list_milestones"]], "make_request() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.make_request"]], "move_card() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.move_card"]], "paginate_api() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.paginate_api"]], "patch_issue() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.patch_issue"]], "post() (in module compliance.utils.services.pagerduty)": [[4, "compliance.utils.services.pagerduty.post"]], "put() (in module compliance.utils.services.pagerduty)": [[4, "compliance.utils.services.pagerduty.put"]], "rand_color() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.rand_color"]], "remove_labels() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.remove_labels"]], "search_issues() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.search_issues"]], "send_event() (in module compliance.utils.services.pagerduty)": [[4, "compliance.utils.services.pagerduty.send_event"]], "update_annotations() (compliance.utils.services.github.github method)": [[4, "compliance.utils.services.github.Github.update_annotations"]]}})